<%= form_with(model: food_nutrient) do |form| %>

  <% if food_nutrient.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(food.errors.count, "error") %> prohibited this food_nutrient from being saved:</h2>

      <ul>
        <% food_nutrient.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <input type='hidden' id="food_nutrient_food_id" name="food_nutrient[food_id]" value="<%= @food.id %>"/>
    <%= form.label :nutrient_id %>
    <%
      nutrient_options = []
      @unused_nutrients.each do |nut|
        nutrient_options << [nut.name, nut.id]
      end
    %>
    <%
      if food_nutrient.blank? || food_nutrient.id.blank?
        # display the food nutrient select element when creating a nutrient for a food_nutrient
    %>
      <%= form.select :nutrient_id, nutrient_options %>
    <%
      else
        # TODO: Review this.
        # This is a previously created food_nutrient, so the nutrient doesn't change - display it, no select.
        # Display the nutrient id as a hidden input field, so it is used for the update (consider dropping this)
        # Simply display the nutrient name (with an ID for testing)
    %>
        <input type='hidden' id="food_nutrient_nutrient_id" value="<%= food_nutrient.nutrient.id %>">
        <span id="food_nutrient_nutrient_name"><%= food_nutrient.nutrient.name %></span>
    <% end %>
  </div>

  <div>
    <%= form.label :amount %>
    <%= form.text_field :amount %>
    <%= food_nutrient.nutrient.unit_code %>
    per 100G
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>
